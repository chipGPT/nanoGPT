$date
	Mon Jan 22 20:53:13 2024
$end

$version
	Synopsys VCS version R-2020.12-SP2-1_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 e72379e8fa92f5f2 $end


$scope module $unit $end
$upscope $end


$scope module DEFINE_PKG $end
$upscope $end


$scope module fmul_tb $end
$var integer 32 ! fd1 $end
$var reg 32 " expected_result [31:0] $end
$var reg 32 # temp1 [31:0] $end
$var reg 32 $ temp2 [31:0] $end
$var reg 32 % temp3 [31:0] $end
$var integer 32 & fd $end
$var integer 32 ' i $end
$var reg 64 ( bus [63:0] $end
$var wire 32 ) result [31:0] $end

$scope begin unnamed$$_0 $end
$upscope $end


$scope module fmul0 $end
$var wire 32 * a_in [31:0] $end
$var wire 32 + b_in [31:0] $end
$var wire 32 ) result [31:0] $end
$var reg 48 , mul_fix_out [47:0] $end
$var reg 1 - zero_check $end
$var reg 23 . M_result [22:0] $end
$var reg 9 / e_result0 [8:0] $end
$var reg 8 0 e_result [7:0] $end
$var reg 1 1 overflow $end
$var reg 1 2 sign $end
$var reg 23 3 overflow_mask [22:0] $end
$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "
b10000000000000000000000000000011 &
b10000000000000000000000000000100 !
b00000000000000000000000000000000 '
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx $
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
x1
x2
0-
bxxxxxxxxxxxxxxxxxxxxxxx .
bxxxxxxxx 0
bxxxxxxxxx /
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ,
bxxxxxxxxxxxxxxxxxxxxxxx 3
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx *
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx )
$end
#10000
b0100000000001110100011001101000001000000001111000011011010110010 (
b01000000001111000011011010110010 +
b01000000000011101000110011010000 *
02
b011010001100110111011101100100011100100010100000 ,
b00000000000000000000000000000010 #
b00000000000000000000000000000011 $
b00000000000000000000000000000111 %
b01000000110100011001101110111011 "
b00000000000000000000000000000001 '
b010000001 /
b10000001 0
b010000001xxxxxxxxxxxxxxxxxxxxxxx )
b10100011001101110111011 .
01
b11111111111111111111111 3
b01000000110100011001101110111011 )
#20000
b0100001000011101010011010011101101000000010101000100000110000101 (
b01000000010101000100000110000101 +
b011101100011000100011000000011111111100000010000 ,
b01000010000111010100110100111011 *
b100000100110110000110111001100010001101010100111 ,
b00000000000000000000000000100111 #
b00000000000000000000000010000010 %
b01000011000000100110110000110111 "
b00000000000000000000000000000010 '
b00000100110110000110111 .
b010000110 /
b10000110 0
b01000011000000100110110000110111 )
#30000
b0000000000101101010100011000000101000010011010111111000011011010 (
b01000010011010111111000011011010 +
b100100001111100111100011100001000001010000111110 ,
b00000000001011010101000110000001 *
b100111111011110011100001011010110101011111011010 ,
b00000000000000000000000000000000 #
b00000000000000000000000000111011 $
b00000000000000000000000000000000 %
b00000010101001110001000111010010 "
b00000000000000000000000000000011 '
1-
b000000000 /
b00000000 0
b00111111011110011100001 .
11
b00000000000000000000000 3
b00000000000000000000000000000000 )
#40000
b0000001000011011111000010110010100000000001110011000111001111000 (
b00000000001110011000111001111000 +
b011111011010000001011010101011001100001001111000 ,
b00000010000110111110000101100101 *
b011100001111110010100010000101001010110101011000 ,
b00000000000000000000000000000000 $
b00000000000000000000000000000000 "
b00000000000000000000000000000100 '
b11000011111100101000100 .
#50000
b0100000001011010001010111001101100000010011110101010100100101111 (
b00000010011110101010100100101111 +
b100110001010000100100001000011000000111010001011 ,
b01000000010110100010101110011011 *
b110101011001111011000100001101010101010001110101 ,
b00000000000000000000000000000011 #
b00000011010101011001111011000100 "
b00000000000000000000000000000101 '
0-
b111111111 /
b11111111 0
b10101011001111011000100 .
01
b11111111111111111111111 3
b01111111110101011001111011000100 )
b000000110 /
b00000110 0
b00000011010101011001111011000100 )
#60000
b0100000001011100110110010111111001000000011000100010000001011100 (
b01000000011000100010000001011100 +
b110000001011011000010010101100010000101110110100 ,
b01000000010111001101100101111110 *
b110000110001001111101011110010011110100101001000 ,
b00000000000000000000000000000100 $
b00000000000000000000000000001100 %
b01000001010000110001001111101100 "
b00000000000000000000000000000110 '
b010000010 /
b10000010 0
b10000110001001111101011 .
b01000001010000110001001111101011 )
#70000
b0100000000110111100001001010011001000000001011011001100011111011 (
b01000000001011011001100011111011 +
b100101011100001011110011110100100000111010001010 ,
b01000000001101111000010010100110 *
b011111000111001001001110110111111001111011000010 ,
b00000000000000000000000000000011 $
b00000000000000000000000000001000 %
b01000000111110001110010010011110 "
b00000000000000000000000000000111 '
b11110001110010010011101 .
b010000001 /
b10000001 0
b01000000111110001110010010011101 )
#80000
b0100001000010111000011101001101000000000000110110110111011011100 (
b00000000000110110110111011011100 +
b011011110110110011001001001101110101001010101000 ,
b01000010000101110000111010011010 *
b010110111011011101000001010101001011100001011000 ,
b00000000000000000000000000100110 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000010000000010111111110100011 "
b00000000000000000000000000001000 '
1-
b000000000 /
b00000000 0
b01101110110111010000010 .
11
b00000000000000000000000 3
b00000000000000000000000000000000 )
#90000
b0100001000010111000000000111111101000000000011110111111000101010 (
b01000000000011110111111000101010 +
b010101001010101110011001111111100011000101000100 ,
b01000010000101110000000001111111 *
b010101001010001110110001111101011001011011010110 ,
b00000000000000000000000000000010 $
b00000000000000000000000001010101 %
b01000010101010010100011101100100 "
b00000000000000000000000000001001 '
0-
b111111111 /
b11111111 0
b01010010100011101100011 .
01
b11111111111111111111111 3
b01111111101010010100011101100011 )
b010000101 /
b10000101 0
b01000010101010010100011101100011 )
#100000
b0100001001111001000010111000011000000010010100011001010001010100 (
b00000010010100011001010001010100 +
b011110111001111011100101100001001001010110101100 ,
b01000010011110010000101110000110 *
b110010111110001010110100110001110011111111111000 ,
b00000000000000000000000000111110 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000101010010111110001010110101 "
b00000000000000000000000000001010 '
b000001010 /
b00001010 0
b10010111110001010110100 .
b00000101010010111110001010110100 )
#110000
b0000000000000000000000000000000000000000000000000000000000000000 (
b00000000000000000000000000000000 +
b011111001000010111000011000000000000000000000000 ,
b00000000000000000000000000000000 *
b010000000000000000000000000000000000000000000000 ,
b00000000000000000000000000001011 '
1-
b000000000 /
b00000000 0
b00000000000000000000000 .
11
b00000000000000000000000 3
b00000000000000000000000000000000 )
#120000
b00000000000000000000000000001100 '
#130000
b00000000000000000000000000001101 '
#140000
b00000000000000000000000000001110 '
#150000
b00000000000000000000000000001111 '
#160000
b00000000000000000000000000010000 '
#170000
b00000000000000000000000000010001 '
#180000
b00000000000000000000000000010010 '
#190000
b00000000000000000000000000010011 '
#200000
b00000000000000000000000000010100 '
